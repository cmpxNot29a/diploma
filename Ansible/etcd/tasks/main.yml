---

- name: Set etcd cluster host IPs
  set_fact:
    etcd_cluster_hosts: "{{ dict(groups['etcd_nodes'] | zip(groups['etcd_nodes'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']))) }}"
#     etcd_cluster_hosts: "{{ dict(ansible_play_hosts | zip(ansible_play_hosts | map('extract', hostvars, ['ansible_default_ipv4', 'address']))) }}"

- name: debug
  debug:
    var: etcd_cluster_hosts

- name: Download etcd binary
  get_url:
    url: "https://github.com/etcd-io/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
    dest: "/tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
    mode: '0644'
  # Загружает архив с бинарными файлами etcd с официального репозитория на GitHub.

- name: Extract etcd binary
  unarchive:
    src: "/tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
    dest: "/tmp"
    remote_src: yes
    creates: "/tmp/etcd-{{ etcd_version }}-linux-amd64"
  # Распаковывает архив и помещает бинарные файлы в /usr/local/bin.

- name: Copy files
  copy:
    src: "/tmp/etcd-{{ etcd_version }}-linux-amd64/{{ item}}"
    dest: "/usr/local/bin/"
    mode: '0755'
    remote_src: yes
  loop:
    - etcd
    - etcdctl
    - etcdutl

- name: Create etcd user and group
  user:
    name: etcd
    system: yes
    shell: /bin/false
  # Создает системного пользователя и группу etcd.

- name: Create etcd data directory
  file:
    path: /var/lib/etcd
    state: directory
    owner: etcd
    group: etcd
    mode: '0770'

- name: Create etcd data directory
  file:
    path: /etc/etcd
    state: directory
  # Создает каталог для данных etcd и устанавливает правильные права доступа.

- name: Configure etcd
  template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service

- name: Start and enable etcd service
  systemd:
    name: etcd
    enabled: yes
    state: started
  # Настраивает и запускает службу etcd.